<launch>
    <!-- robot1 -->
    <group ns="robot1">
        <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames --> 
        <!-- x y z r p y -->
        <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="-0.01 0 0 3.1415926 0 0 base_link laser 30"/>  
        <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0 0.5 0 0 0 0 map laser 30" />   -->
        <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.06 0.02 0 0 0 base_link imu 30"/>
        <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.3 0 0 0 base_footprint base_link 30"/>
        <!-- <node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 odom base_link 30" /> -->

        <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
        <!-- map to odom will be provided by the AMCL -->
        <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />

        <!-- Map File -->
        <arg name="map_file" default="$(find map_server)/mytest/test.yaml"/>
        
        <!-- Map Server -->
        <!-- Publish: /map, /map_metadata -->
        <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>
        
        <!-- Robot odometry simulator-->
        <!-- <node pkg="navigation_test" name="odometry" type="odom" /> -->
        <node pkg="navigation_test" name="odometry" type="odom_tutorial">
        </node>

        <!-- Move Base Node -->
        <!-- Subscribe: /move_base_simple/goal -->
        <!-- Publish: /cmd_vel -->
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
          <remap from="cmd_vel" to ="vel_obseleted" /> <!--when using path tracker needed to remap move_base's cmd_vel to other topic name-->
          <rosparam file="$(find navigation_test)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
          <rosparam file="$(find navigation_test)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
          <rosparam file="$(find navigation_test)/config/local_costmap_params.yaml" command="load" />
          <rosparam file="$(find navigation_test)/config/global_costmap_params.yaml" command="load"  />

          <!-- <rosparam file="$(find navigation_test)/config/base_local_planner_params.yaml" command="load" /> -->
          <rosparam file="$(find navigation_test)/config/global_planner_params.yaml" command="load" />
          <rosparam file="$(find navigation_test)/config/move_base_params.yaml" command="load" />

          <!-- costmap_prohibition_layer -->
          <rosparam file="$(find navigation_test)/config/prohibition_areas.yaml" command="load" ns="global_costmap/costmap_prohibition_layer"/>
        </node>

        <!-- path_Tracker -->
        <node name="path_tracker" pkg="robot_navigation" type="pathTracker" output="screen">
            <remap from="global_filter" to="odom"/>
        <!-- <node name="path_tracker" pkg="robot_navigation" type="pathTracker_main" output="screen"> -->
        <!-- <node name="path_tracker" pkg="robot_navigation" type="pathTracker_main_vl53" output="screen"> -->
            <rosparam file="$(find robot_navigation)/params/pathTracker_yellow.yaml" command="load" /> 
        </node>

        <!-- obstacle_simulation.launch -->
        <include file="$(find obstacle_simulation)/launch/obstacle_simulation.launch">
        </include>
    </group>

    <!-- robot2 -->
    <group ns="robot2">
        <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames --> 
        <!-- x y z r p y -->
        <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="-0.01 0 0 3.1415926 0 0 base_link laser 30"/>  
        <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0 0.5 0 0 0 0 map laser 30" />   -->
        <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.06 0.02 0 0 0 base_link imu 30"/>
        <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.3 0 0 0 base_footprint base_link 30"/>
        <!-- <node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 odom base_link 30" /> -->

        <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
        <!-- map to odom will be provided by the AMCL -->
        <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />

        <!-- Map File -->
        <arg name="map_file" default="$(find map_server)/mytest/test.yaml"/>
        
        <!-- Map Server -->
        <!-- Publish: /map, /map_metadata -->
        <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>
        
        <!-- Robot odometry simulator-->
        <!-- <node pkg="navigation_test" name="odometry" type="odom" /> -->
        <node pkg="navigation_test" name="odometry" type="odom_tutorial">
        </node>

        <!-- Move Base Node -->
        <!-- Subscribe: /move_base_simple/goal -->
        <!-- Publish: /cmd_vel -->
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
          <remap from="cmd_vel" to ="vel_obseleted" /> <!--when using path tracker needed to remap move_base's cmd_vel to other topic name-->
          <rosparam file="$(find navigation_test)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
          <rosparam file="$(find navigation_test)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
          <rosparam file="$(find navigation_test)/config/local_costmap_params.yaml" command="load" />
          <rosparam file="$(find navigation_test)/config/global_costmap_params.yaml" command="load"  />

          <!-- <rosparam file="$(find navigation_test)/config/base_local_planner_params.yaml" command="load" /> -->
          <rosparam file="$(find navigation_test)/config/global_planner_params.yaml" command="load" />
          <rosparam file="$(find navigation_test)/config/move_base_params.yaml" command="load" />

          <!-- costmap_prohibition_layer -->
          <rosparam file="$(find navigation_test)/config/prohibition_areas.yaml" command="load" ns="global_costmap/costmap_prohibition_layer"/>
        </node>

        <!-- path_Tracker -->
        <node name="path_tracker" pkg="robot_navigation" type="pathTracker" output="screen">
            <remap from="global_filter" to="odom"/>
        <!-- <node name="path_tracker" pkg="robot_navigation" type="pathTracker_main" output="screen"> -->
        <!-- <node name="path_tracker" pkg="robot_navigation" type="pathTracker_main_vl53" output="screen"> -->
            <rosparam file="$(find robot_navigation)/params/pathTracker_yellow.yaml" command="load" /> 
        </node>

        <!-- obstacle_simulation.launch -->
        <include file="$(find obstacle_simulation)/launch/obstacle_simulation.launch">
        </include>
    </group>

    <!-- Initial Pose and Goal Publisher -->
    <!-- Publish: /initialpose, /move_base_simple/goal -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find navigation_test)/rviz/rviz_twoRobot.rviz"/> 

</launch>

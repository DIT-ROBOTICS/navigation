#!/usr/bin/env python
from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator, int_t, double_t, bool_t, str_t
PACKAGE = "navigation_main"
NAMESPACE = "navigation_main"
GENERATE_FILE = "navigation_main_param"


gen = ParameterGenerator()

gen.add("publish", bool_t, 0, "To publish or not", True)
gen.add("twist_topic", str_t, 0, "Topic to subscribe odometry information", "/Toposition")
gen.add("odom_topic", str_t, 0, "Topic to publish odometry information", "/odom")

gen.add("fixed_frame", str_t, 0, "Parent frame", "odom")
gen.add("target_frame", str_t, 0, "Child frame", "base_footprint")

gen.add("covariance_x", double_t, 0, "Covariance x", 0.05, 0, 1)
gen.add("covariance_y", double_t, 0, "Covariance y", 0.05, 0, 1)
gen.add("covariance_z", double_t, 0, "Covariance z", 0.1, 0, 1)
gen.add("covariance_vx", double_t, 0, "Covariance vx", 0.1, 0, 1)
gen.add("covariance_vy", double_t, 0, "Covariance vy", 0.1, 0, 1)
gen.add("covariance_vz", double_t, 0, "Covariance vz", 0.2, 0, 1)

gen.add("covariance_multi_vx", double_t, 0, "Covariance multiplican for vx", 0.5, 0, 9)
gen.add("covariance_multi_vy", double_t, 0, "Covariance multiplican for vy", 0.5, 0, 9)
gen.add("covariance_multi_vz", double_t, 0, "Covariance multiplican for vz", 0.5, 0, 9)

size_enum = gen.enum([gen.const("Small",      int_t, 0, "A small constant"),
                      gen.const("Medium",     int_t, 1, "A medium constant"),
                      gen.const("Large",      int_t, 2, "A large constant"),
                      gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                     "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, NAMESPACE, GENERATE_FILE))

<launch>
  <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames -->
  <!-- x y z r p y -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="-0.01 0 0 3.1415926 0 0 base_link laser_frame 30" />
  <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.06 0.02 0 0 0 base_link imu 30" />
  <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.3 0 0 0 base_footprint base_link 30" />
  <!-- <node pkg="tf" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 odom base_link 30" /> -->

  <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
  <!-- map to odom will be provided by the AMCL -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />

  <!-- Initial Pose and Goal Publisher -->
  <!-- Publish: /initialpose, /move_base_simple/goal -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find navigation_run)/rviz/rviz_sim.rviz"/>

  <!-- Map File -->
  <arg name="map_file" default="$(find map_server)/mytest/basic_map.yaml"/>

  <!-- Map Server -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Robot odometry simulator-->
  <!-- <node pkg="navigation_run" name="odometry" type="odom" /> -->
  <node pkg="navigation_run" name="odometry" type="odom_tutorial" />

  <!-- Move Base Node -->
  <!-- Subscribe: /move_base_simple/goal -->
  <!-- Publish: /cmd_vel -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <remap from="cmd_vel" to ="vel_obseleted" /> <!--when using pathTracker, needed to remap cmd_vel to another topic name-->
    <!-- <remap from="nav_goal" to="nav_goal_obseleted" /> for dockTracker -->
    <rosparam file="$(find navigation_run)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find navigation_run)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find navigation_run)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find navigation_run)/config/global_costmap_params.yaml" command="load"  />

    <!-- <rosparam file="$(find navigation_run)/config/base_local_planner_params.yaml" command="load" /> -->
    <rosparam file="$(find navigation_run)/config/global_planner_params.yaml" command="load" />
    <rosparam file="$(find navigation_run)/config/move_base_params.yaml" command="load" />
  </node>

  <!-- path_Tracker -->
  <node name="path_tracker" pkg="path_tracker" type="pathTracker_sim" output="screen">
      <remap from="global_filter" to="odom"/>
      <!-- for lpf to filter the velocity -->
      <!-- <remap from="cmd_vel" to="raw_cmd_vel"/>   -->
      <rosparam file="$(find path_tracker)/params/pathTracker_test.yaml" command="load" /> 
  </node>

  <!-- low pass filter on pt's cmd_vel -->
  <node pkg="lpf" type="vel_lpf" name="vel_lpf" output="screen">
    <rosparam file="$(find lpf)/params/lpf.yaml" command="load" />
  </node>

  <!-- obstacle_simulation.launch -->
  <include file="$(find obstacle_simulation)/launch/obstacle_simulation.launch">
  </include>

  <!-- docking_tracker -->
  <!-- <node name="docking_tracker" pkg="path_tracker" type="dockTracker_sim" output="screen">
    <rosparam file="$(find path_tracker)/params/dockTracker.yaml" command="load" /> 
  </node> -->

</launch>

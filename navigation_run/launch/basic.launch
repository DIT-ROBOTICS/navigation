<launch>
    <!-- choose what the mode you want. Simulation or Run Real Robot -->
    <arg name="is_run" default="false" />
    <arg name="is_sim" default="false" />

    <!-- which robot -->
    <arg name="is_robot" default="false" />
    <arg name="is_robot1" default="false" />
    <arg name="is_robot2" default="false" />
    <arg name="is_rival1" default="false" />
    <arg name="is_rival2" default="false" />

    <!-- for which side (blue/green) & robot position  -->
    <arg name="side" default="0" />
    <arg name="basketBot" default="1" />

    <arg name="robot_name" default="" if="$(arg is_robot)"/>
    <arg name="robot_name" default="robot1" if="$(arg is_robot1)"/>
    <arg name="robot_name" default="robot2" if="$(arg is_robot2)"/>
    <arg name="robot_name" default="rival1" if="$(arg is_rival1)"/>
    <arg name="robot_name" default="rival2" if="$(arg is_rival2)"/>

    <!-- which side -->
    <param name="side" type="int" value="$(arg side)" />

    <!-- Hub -->
    <include file="$(find navigation_run)/launch/hub1.launch" if="$(arg is_robot1)" />
    <include file="$(find navigation_run)/launch/hub2.launch" if="$(arg is_robot2)" />

    <!-- Main -->
    <include file="$(find eurobot2023_main)/launch/run_main.launch" if="$(eval ((arg('side') == '0') and (arg('is_run'))))"/>
        <arg name="basketBot" value="$(arg basketBot)" />
        <arg name="side" value="$(arg side)" />
    </include>

    <!-- Localization -->
    <include file="$(find eurobot_localization)/launch/eurobot_localization_robots.launch" if="$(arg is_run)" >
        <arg name="active_robot1" value="1" if="$(arg is_robot1)"/>
        <arg name="active_robot1" value="0" unless="$(arg is_robot1)"/>
        <arg name="active_robot2" value="1" if="$(arg is_robot2)"/>
        <arg name="active_robot2" value="0" unless="$(arg is_robot2)"/>
        <arg name="side" value="$(arg side)" />
        <arg name="basketBot" value="$(arg basketBot)" />
    </include>

    <!-- On-board camera -->
    <!-- <include file="$(find aruco_ros)/launch/onRobot.launch" if="$(arg is_run)"/> -->
       

    <group ns="$(arg robot_name)" unless="$(arg is_robot)">
        <!-- Map Info -->
        <node pkg="map_server" name="map_server" type="map_server" args="$(find map_server)/mytest/basic_map.yaml">
            <param name="frame_id" value="map" if="$(arg is_robot)"/>
            <param name="frame_id" value="robot1/map" if="$(arg is_robot1)"/>
            <param name="frame_id" value="robot2/map" if="$(arg is_robot2)"/>
        </node>

        <!-- Localization Sim -->
        <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
        <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 $(arg robot_name)/map $(arg robot_name)/odom 30" if="$(arg is_sim)"/>
        
        <!-- Fake Localization -->
        <node pkg="navigation_run" name="odometry" type="odometry_global_velocity" if="$(arg is_sim)">
            <param name="tf_prefix" value="$(arg robot_name)" />
        </node>

        <!-- Navigation Main -->
        <include file="$(find navigation_main)/launch/main.launch">
            <!-- sim or run -->
            <arg name="is_run" value="$(arg is_run)" />
            <arg name="is_sim" value="$(arg is_sim)" />

            <!-- which robot -->
            <arg name="is_robot" value="$(arg is_robot)" />
            <arg name="is_robot1" value="$(arg is_robot1)" />
            <arg name="is_robot2" value="$(arg is_robot2)" />
            <arg name="is_rival1" value="$(arg is_rival1)" />
            <arg name="is_rival2" value="$(arg is_rival2)" />
        </include>

        <!-- move base -->
        <include file="$(find navigation_run)/launch/move_base.launch">
            <!-- sim or run -->
            <arg name="is_run" value="$(arg is_run)" />
            <arg name="is_sim" value="$(arg is_sim)" />

            <!-- which robot -->
            <arg name="is_robot" value="$(arg is_robot)" />
            <arg name="is_robot1" value="$(arg is_robot1)" />
            <arg name="is_robot2" value="$(arg is_robot2)" />
            <arg name="is_rival1" value="$(arg is_rival1)" />
            <arg name="is_rival2" value="$(arg is_rival2)" />
        </include>

        <!-- path_Tracker -->
        <include file="$(find path_tracker)/launch/pathTracker.launch">
            <!-- sim or run -->
            <arg name="is_sim" value="$(arg is_sim)" />
            <arg name="is_run" value="$(arg is_run)" />

            <!-- which robot -->
            <arg name="is_robot" value="$(arg is_robot)"/>
            <arg name="is_robot1" value="$(arg is_robot1)" />
            <arg name="is_robot2" value="$(arg is_robot2)" />
            <arg name="is_rival1" value="$(arg is_rival1)" />
            <arg name="is_rival2" value="$(arg is_rival2)" />
        </include>

        <!-- docking_tracker -->
        <include file="$(find path_tracker)/launch/dockTracker.launch">
            <!-- sim or run -->
            <arg name="is_sim" value="$(arg is_sim)" />
            <arg name="is_run" value="$(arg is_run)" />

            <!-- which robot -->
            <arg name="is_robot" value="$(arg is_robot)"/>
            <arg name="is_robot1" value="$(arg is_robot1)" />
            <arg name="is_robot2" value="$(arg is_robot2)" />
            <arg name="is_rival1" value="$(arg is_rival1)" />
            <arg name="is_rival2" value="$(arg is_rival2)" />
        </include>

        <!-- low pass filter on pt's cmd_vel -->
        <node pkg="lpf" type="vel_lpf" name="vel_lpf" output="screen">
            <rosparam file="$(find lpf)/params/lpf.yaml" command="load" />
            <remap from="cmd_vel" to="path_tracker_cmd_vel"/>
        </node>

        <!-- <include file="$(find obstacle_simulation)/launch/obstacle_simulation.launch"/> -->
    </group>
</launch>
